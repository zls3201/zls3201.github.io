{
	"data" : 
	{"Content":"\n\n\u003ch1 id=\"cms\"\u003eCMS\u003c/h1\u003e\n\n\u003cp\u003e\u003ca href=\"!https://strapi.io/documentation/developer-docs/latest/getting-started/quick-start.html#_1-install-strapi-and-create-a-new-project\"\u003eStrAPI\u003c/a\u003e Headless CMS 自动生成数据库架构，生成openapi和graphql服务，支持拦截器，自定义数据操作\u003c/p\u003e\n\n\u003cp\u003e目前orchardcore，个人认为最好的实现，问题是实际使用时可否自定义后端栏目，隐藏系统管理相关选项\u003c/p\u003e\n\n\u003cp\u003e支持自定义数据类型\u003cbr /\u003e\n支持工作流\u003cbr /\u003e\n支持触发器\u003cbr /\u003e\n动态代码生成:dotnet script,DotNetCliTool,\u003ca href=\"https://devblogs.microsoft.com/dotnet/new-c-source-generator-samples/\"\u003esource-generator\u003c/a\u003e\nTemplate Engine:Fluid\u003c/p\u003e\n\n\u003ch1 id=\"元编程\"\u003e元编程\u003c/h1\u003e\n\n\u003cp\u003e\u003ca href=\"https://github.com/cisco/ChezScheme\"\u003eChezScheme\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://haxe.org/\"\u003ehaxe\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://nim-lang.org/documentation.html\"\u003enim\u003c/a\u003e 可输出js、c语言代码,相关资源 \u003ca href=\"https://github.com/xflywind/awesome-nim\"\u003eawesome-nim\u003c/a\u003e  nimx wNim\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://deathking.github.io/metaprogramming-in-ruby/chapter01.html\"\u003eRuby中的元编程\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://python3-cookbook.readthedocs.io/zh_CN/latest/chapters/p09_meta_programming.html\"\u003ePython3 元编程实践\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://github.com/dotnet/roslyn-sdk/blob/master/samples/CSharp/SourceGenerators/SourceGeneratorSamples/AutoNotifyGenerator.cs\"\u003edotnet 代码生成\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://github.com/IronyProject/Irony\"\u003eIrony自定义编程语言\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e[LLVM编译原理实践]\u003c/p\u003e\n\n\u003ch2 id=\"graphql后端引擎\"\u003eGraphql后端引擎\u003c/h2\u003e\n\n\u003cp\u003e\u003ca href=\"https://github.com/strapi/strapi\"\u003eStrapi\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://github.com/daptin/daptin\"\u003edaptin\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eOrchardCore\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://github.com/hasura/graphql-engine/\"\u003ehasura/graphql-engine\u003c/a\u003e 可视化设计 基于pgsql，mysql版本还是测试版\u003c/p\u003e\n\n\u003cp\u003eNodeJS方案： apollo-server + prisma + express + graphql\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://github.com/SimonCropp/GraphQL.EntityFramework\"\u003eGraphQL.EntityFramework\u003c/a\u003e\u003c/p\u003e\n","date":"2021-01-08T00:00:00+08:00","permalink":"https://www.zls3201.com/post/meta_programming/","summary":"CMS StrAPI Headless CMS 自动生成数据库架构，生成openapi和graphql服务，支持拦截器，自定义数据操作 目前orchardcore，个人认为最好的实现","title":"CMS，元编程与Graphql","type":"post"}

}