<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>calcute on 珍珑阁</title>
    <link>https://zls3201.github.io/tags/calcute/</link>
    <description>Recent content in calcute on 珍珑阁</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Thu, 06 Sep 2018 07:00:00 +0800</lastBuildDate>
    
	<atom:link href="https://zls3201.github.io/tags/calcute/feed.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>机器学习笔记</title>
      <link>https://zls3201.github.io/post/ml_note/</link>
      <pubDate>Thu, 06 Sep 2018 07:00:00 +0800</pubDate>
      
      <guid>https://zls3201.github.io/post/ml_note/</guid>
      <description>ML 资料整理 机器学习课程 网易公开课_吴恩达_机器学习_2008 斯坦福机器学习笔记 机器学习第九期 数据挖掘十大算法详解 机器学习基础：案例研究 神经网</description>
    </item>
    
    <item>
      <title>常用导数</title>
      <link>https://zls3201.github.io/post/useful_derivative/</link>
      <pubDate>Sun, 15 Jul 2018 08:00:35 +0800</pubDate>
      
      <guid>https://zls3201.github.io/post/useful_derivative/</guid>
      <description>常用导数 1.常用导数 导数列表 Katex语法</description>
    </item>
    
    <item>
      <title>逻辑回归</title>
      <link>https://zls3201.github.io/post/logistic_regression/</link>
      <pubDate>Sun, 15 Jul 2018 08:00:35 +0800</pubDate>
      
      <guid>https://zls3201.github.io/post/logistic_regression/</guid>
      <description>逻辑回归 1.逻辑回归数学 p(y=0|x;\theta)=1-h_\theta(x) \end{cases} $$\end{aligned}} $$</description>
    </item>
    
    <item>
      <title>线性回归</title>
      <link>https://zls3201.github.io/post/linear_regression/</link>
      <pubDate>Thu, 12 Jul 2018 08:00:35 +0800</pubDate>
      
      <guid>https://zls3201.github.io/post/linear_regression/</guid>
      <description>线性回归 1.线性回归数学 \begin{aligned} J(\theta)=\frac 1 m \sum^{m}{i=1} \frac 1 2 (h{\theta}(x^{(i)})-y^{(i)})^2 \end{aligned} $$ # -*- coding: utf-8 -*- &amp;#34;&amp;#34;&amp;#34;Created on Sat Jun 9 08:18:10 2018@author: zls3201@gmail.com&amp;#34;&amp;#34;&amp;#34; import numpy as np from matplotlib import pyplot as plt from mpl_toolkits.mplot3d import Axes3D from matplotlib import animation as amat def loadDataSet(fileName): &amp;#34;&amp;#34;&amp;#</description>
    </item>
    
    <item>
      <title>Mathjax测试</title>
      <link>https://zls3201.github.io/post/mathjax_test/</link>
      <pubDate>Mon, 11 Jun 2018 08:00:35 +0800</pubDate>
      
      <guid>https://zls3201.github.io/post/mathjax_test/</guid>
      <description>Hugo Mathjax测试 c^{2} = a^{2} + b^{2}. graph LR; A[Hard edge] --&amp;gt;|Link text| B(Round edge) B --&amp;gt; C{Decision} C --&amp;gt;|One| D[Result one] C --&amp;gt;|Two| E[Result two] graph LR; A[Hard edge] --|Link text| B(Round edge) B -- C{Decision} C --|One| D[Result one] C --|Two| E[Result two] graph LR sid-B3655226-6C29-4D00-B685-3D5C734DC7E1[&#34; 提交申请 熊大 &#34;]; class sid-B3655226-6C29-4D00-B685-3D5C734DC7E1 node-executed; sid-4DA958A0-26D9-4D47-93A7-70F39FD7D51A[&#34; 负责人</description>
    </item>
    
    <item>
      <title>分布式运维Tips</title>
      <link>https://zls3201.github.io/post/devoptips/</link>
      <pubDate>Wed, 23 May 2018 09:36:35 +0800</pubDate>
      
      <guid>https://zls3201.github.io/post/devoptips/</guid>
      <description>系统管理与自动化 ansible salt puppet chef 阅读资料ansible和puppet的安装和比较翻译-Salt与Ansible全方位比较Puppet、Chef、An</description>
    </item>
    
    <item>
      <title>一个计算机算法实践提纲</title>
      <link>https://zls3201.github.io/post/compute_list/</link>
      <pubDate>Tue, 29 Aug 2017 15:36:35 +0800</pubDate>
      
      <guid>https://zls3201.github.io/post/compute_list/</guid>
      <description>作者：陈军 链接： https://www.zhihu.com/question/23844552/answer/25926376 来源：知乎 著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。 初期: 一.基本算法: (1)枚举. (poj1753,poj2965) (2)贪心</description>
    </item>
    
    <item>
      <title>圆周率PI计算</title>
      <link>https://zls3201.github.io/post/pi_cacl/</link>
      <pubDate>Wed, 12 Jul 2017 15:52:15 +0800</pubDate>
      
      <guid>https://zls3201.github.io/post/pi_cacl/</guid>
      <description>闲来无事 写了个圆周率计算 算法推到如下 代码实现 //sin30=0.5 double angle = 30, sin = 0.5; for (int i = 0; i &amp;lt; 30; i++) { var s1 = 180 / (angle / Math.Pow(2, i)) * sin; var s2 = 180 / (angle / Math.Pow(2, i)) * sin / Math.Sqrt(1 - sin * sin); Co</description>
    </item>
    
  </channel>
</rss>